In this version, we enhanced the robot control system by introducing a structured real-time task scheduling mechanism to replace the previous QTimer-based control logic. The core improvement is the creation of a TaskScheduler class that supports multithreaded periodic task execution, significantly improving modularity, timing precision, and extensibility.

The ControlPanel class was refactored to register the ultrasonic sensor reading and camera frame capture as periodic tasks through TaskScheduler, with independently defined intervals (300ms and 50ms respectively). These tasks now run in parallel using separate threads, ensuring non-blocking and consistent timing behavior. Furthermore, each scheduled task logs its execution time using std::chrono, enabling runtime  profiling for later analysis.

This upgrade addresses several key design criteria, including real-time responsiveness,  transparency, and structured task management. It also aligns with embedded systems best practices by simulating RTOS-style scheduling and offering a clear architecture for future task extensions. These improvements directly respond to instructor feedback regarding the need for  analysis and a complete design methodology, raising the systemâ€™s design maturity to an advanced level.