我们重构后的项目采用了面向对象的 C++ 结构，使用 callback 接口实现了完全事件驱动的超声波检测机制。每个模块都通过类封装并独立管理内存，且超声波测距使用 libgpiod 实现阻塞监听，有效避免轮询延迟问题。在构建方面，我们使用标准 Makefile 自动组织所有源文件，整个项目遵循模块化、可读性与可扩展性强的设计理念，充分满足嵌入式系统课程对封装性、实时性与构建系统的要求。

Our refactored project adopts an object-oriented C++ structure and implements a fully event-driven ultrasonic detection mechanism using a callback interface. Each module is encapsulated as a class and manages memory independently. For ultrasonic distance measurement, we use libgpiod to achieve blocking edge detection, effectively avoiding the delays caused by polling. In terms of build management, we use a standard Makefile to automatically organize and compile all source files. The entire project follows a modular design with strong readability and scalability, fully meeting the embedded systems course requirements for encapsulation, real-time performance, and build system structure.